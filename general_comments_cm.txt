Parameter maps:



Style (partly personal taste):

1) Namespace indentation:

   You may consider not indenting namespace content:
  
   namespace foo {
  
   class bar {};
  
   }
  
   instead of
  
   namepspace foo {
    
     class bar {};
    
   }
  
2) Function definition:

   I prefer to change:

   bool
   Blueprint
   ::AddComponent(ComponentNameType name)
   
   to:
   
   bool Blueprint::AddComponent(ComponentNameType name).
   
   This saves you 2 lines of code. You therefore get more real code within in screen which makes
   navigation easier and gives the coder better overview.

3) Document preconditions / postconditions in header file so the users knows the restrictions on the
   input.
   
4) Typedefs. I would try to minimize their use. If convenient maybe better use the C++11 type alias
   instead.
   
5) Unit tests:
   - Test the effect of the test on the state of the object. Only testing that it runs and does not
     thow is very limited.
   - Make sure you test all possible flows through your code. Include error and exception cases.
   - Do you use a code coverage tool? Can be very helpful.
   